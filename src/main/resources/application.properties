server.port=8080

#DataBase start
spring.datasource.url=jdbc:mysql://127.0.0.1:3306/musicscore?useUnicode=true&characterEncoding=UTF-8&serverTimezone=GMT%2B8
spring.datasource.username=root
spring.datasource.password=123456
spring.datasource.driver-class-name=com.mysql.jdbc.Driver
#DataBase end

druid.url=jdbc:mysql://127.0.0.1:3306/musicscore?useUnicode=true&characterEncoding=UTF-8&allowMultiQueries=true&serverTimezone=GMT%2B8&nullCatalogMeansCurrent=true
druid.username=root
druid.password=123456
driver-class-name=com.mysql.jdbc.Driver

# mongodb start
#spring.data.mongodb.uri=mongodb://localhost:27017/springboot-db

#mybatis start
mybatis.config-location=classpath:/mybatis-config.xml
#mybatis end


#thymeleaf start
spring.thymeleaf.prefix=classpath:/templates/
spring.thymeleaf.mode=HTML5
spring.thymeleaf.encoding=UTF-8
spring.thymeleaf.servlet.content-type=text/html
#开发时关闭缓存,不然没法看到实时页面
spring.thymeleaf.cache=false
spring.thymeleaf.suffix=.html
#thymeleaf end

#uploadFileSize start
#spring.servlet.multipart.max-file-size=10Mb
#spring.servlet.multipart.max-request-size=100Mb
#uploadFileSize end

##集成mybatis
mybatis.mapper-locations=classpath:/mapper/*Mapper.xml
spring.mail.host=smtp.exmail.qq.com
spring.mail.username=test@qq.com
spring.mail.password=test
spring.mail.from=test@qq.com

##redis
#redis.host=127.0.0.1
#redis.port=6379
#redis.timeout=10
#redis.poolMaxTotal=1000
#redis.poolMaxIdle=500
#redis.poolMaxWait=500


#============== kafka ===================
# 指定kafka 代理地址，可以多个
spring.kafka.bootstrap-servers=localhost:9092

#=============== provider  =======================

spring.kafka.producer.retries=0
# 每次批量发送消息的数量
spring.kafka.producer.batch-size=16384
spring.kafka.producer.buffer-memory=33554432

# 指定消息key和消息体的编解码方式
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=org.apache.kafka.common.serialization.StringSerializer

#=============== consumer  =======================
# 指定默认消费者group id
spring.kafka.consumer.group-id=test-consumer-group

spring.kafka.consumer.auto-offset-reset=earliest
spring.kafka.consumer.enable-auto-commit=true
spring.kafka.consumer.auto-commit-interval=100

# 指定消息key和消息体的编解码方式
spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.value-deserializer=org.apache.kafka.common.serialization.StringDeserializer



